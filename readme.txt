api server 0.0.0.0
username freqtrader
password fraqtrader


Parfait Ibrahim üëå ! Puisque ton chemin Windows est bien :

> `C:\ft_userdata`

Je vais te donner **toutes les commandes Docker Freqtrade adapt√©es √† ton chemin Windows**, de mani√®re **claire, compl√®te et class√©e** pour que tu puisses tout g√©rer facilement üí™.

---

## ‚úÖ **PR√âREQUIS** (√† faire une fois si n√©cessaire)

Cr√©e le r√©pertoire `user_data` et v√©rifie qu‚Äôil contient bien ton fichier `config.json` et ta strat√©gie :

```plaintext
C:\ft_userdata\
  ‚îú‚îÄ‚îÄ config.json
  ‚îú‚îÄ‚îÄ user_data/
      ‚îú‚îÄ‚îÄ strategies/
          ‚îî‚îÄ‚îÄ HybridAdvancedStrategy.py
      ‚îú‚îÄ‚îÄ tradesv3.sqlite
      ‚îî‚îÄ‚îÄ ...
```

---

## üßØ 1. **ARR√äTER LES CONTENEURS ACTUELS**

Tu peux arr√™ter les conteneurs avec leurs noms exacts (remplac√©s ici avec les tiens) :

```powershell
docker stop ft_userdata-freqtrade-run-60d2ea1e435f
docker stop freqtrade
```

> üîÅ Refais cette commande √† chaque fois que tu veux arr√™ter le bot ou le dashboard.

---

## üöÄ 2. **LANCER LE BOT EN MODE TRADING**

```powershell
docker run -d ^
  --rm ^
  --name freqtrade-trading ^
  -v C:\ft_userdata:/freqtrade/user_data ^
  freqtradeorg/freqtrade:stable ^
  trade --config user_data/config.json
```

> üü° Cette commande lance le bot avec la config situ√©e dans `C:\ft_userdata`.

---

## üìä 3. **FAIRE UN BACKTEST**

```powershell
docker run --rm ^
  -v C:\ft_userdata:/freqtrade/user_data ^
  freqtradeorg/freqtrade:stable ^
  backtesting --config user_data/config.json --strategy HybridAdvancedStrategy
```

---

## üß™ 4. **AFFICHER LES R√âSULTATS DU BACKTEST (graphiques)**

```powershell
docker run --rm ^
  -v C:\ft_userdata:/freqtrade/user_data ^
  freqtradeorg/freqtrade:stable ^
  plot-dataframe --config user_data/config.json
```

---

## üåê 5. **LANCER L‚ÄôINTERFACE WEB (DASHBOARD)**

```powershell
docker run -d ^
  --name freqtrade ^
  -p 8080:8080 ^
  -v C:\ft_userdata:/freqtrade/user_data ^
  freqtradeorg/freqtrade:stable ^
  webserver --config user_data/config.json
```

> Ensuite, ouvre : [http://localhost:8080](http://localhost:8080)

---

## üîç 6. **LISTER LES PAIRES DISPONIBLES (ex. Binance Futures)**

```powershell
docker run --rm ^
  -v C:\ft_userdata:/freqtrade/user_data ^
  freqtradeorg/freqtrade:stable ^
  list-pairs --config user_data/config.json
```

---

## üß† 7. **COMMANDES UTILES**

### ‚û§ Voir les logs du bot (en temps r√©el) :

```powershell
docker logs -f freqtrade-trading
```

### ‚û§ Supprimer un conteneur (forcer l'arr√™t et suppression) :

```powershell
docker rm -f freqtrade-trading
```

---

## üõ†Ô∏è 8. **EXEMPLE DE SCRIPT .BAT (AUTOMATIQUE)**

Tu peux cr√©er un fichier `start_bot.bat` dans `C:\ft_userdata` contenant :

```bat
@echo off
echo === D√©marrage du bot Freqtrade ===
docker stop freqtrade-trading
docker rm freqtrade-trading
docker run -d ^
  --rm ^
  --name freqtrade-trading ^
  -v C:\ft_userdata:/freqtrade/user_data ^
  freqtradeorg/freqtrade:stable ^
  trade --config user_data/config.json
pause
```

Et un autre script pour le dashboard : `start_dashboard.bat`

```bat
@echo off
echo === Lancement du Dashboard Freqtrade ===
docker stop freqtrade
docker rm freqtrade
docker run -d ^
  --name freqtrade ^
  -p 8080:8080 ^
  -v C:\ft_userdata:/freqtrade/user_data ^
  freqtradeorg/freqtrade:stable ^
  webserver --config user_data/config.json
pause
```

---

Souhaites-tu que je t‚Äôaide √† cr√©er ou v√©rifier ton `config.json`, ou ta strat√©gie `HybridAdvancedStrategy.py` pour √©viter les erreurs comme *"No pair in whitelist"* ?
